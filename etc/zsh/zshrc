# -*- sh -*-

# emacs doesn't like zle
[[ $EMACS = t ]] && unsetopt zle

# env vars
HISTFILE="$XDG_DATA_HOME/zsh/history"
COMPDUMPFILE="$XDG_DATA_HOME/zsh/compdump"
HISTSIZE=32000
SAVEHIST=32000

# paths (they keep getting overwritten by /etc/profile.d)
MANPATH="$XDG_DATA_HOME/man:$OPAM_SWITCH_PREFIX/man:/usr/local/share/man:/usr/share/man"

LOCAL_PATHS="$HOME/usr/bin:$OPAM_SWITCH_PREFIX/bin:$CARGO_HOME/bin:$XDG_DATA_HOME/perl5/bin"
PERL_PATHS="/usr/bin/core_perl:/usr/bin/site_perl:/usr/bin/vendor_perl"

# include colorgcc but not ccache
PATH="$LOCAL_PATHS:$PERL_PATHS:/usr/lib/jvm/default/bin:/usr/lib/colorgcc/bin:/usr/local/sbin:/usr/local/bin:/usr/bin"
COWPATH="/usr/share/cowsay/cows/:$XDG_DATA_HOME/cows"

# site-functions (used internally)
fpath=("$ZDOTDIR/site-functions" $fpath)
# functions
lpath="$ZDOTDIR/functions"
# plugins
ppath="/usr/share/zsh/plugins"

# zcompdump
zstyle :compinstall filename '$XDG_CONFIG_HOME/zsh/.zshrc'
autoload -Uz compinit
compinit

# proper history lookup
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
autoload -z up-line-or-beginning-search
autoload -z down-line-or-beginning-search

# proper word-kill
autoload -Uz select-word-style
select-word-style bash

# edit in emacs
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

# mouse
if [[ ! -o login ]] && [[ -o interactive ]]
then
    source "$lpath/mouse"
    zle-toggle-mouse
fi

# all them options
setopt autocd autopushd pushdignoredups pushdtohome pushdminus
setopt automenu completealiases completeinword hashlistall \
       listtypes rcexpandparam
setopt extendedglob markdirs multibyte # warncreateglobal warnnestedvar
setopt banghist histexpiredupsfirst histignorespace histlexwords \
       histreduceblanks
setopt noclobber correct dvorak flowcontrol interactivecomments
setopt emacs nohup prompt_subst


## keys
bindkey "\e[1~" beginning-of-line
bindkey "\e[2~" overwrite-mode
bindkey "\e[3~" delete-char
bindkey "\e[4~" end-of-line
bindkey "\e[5~" beginning-of-history
bindkey "\e[6~" end-of-history
bindkey "\e[7~" beginning-of-line
bindkey "\e[8~" end-of-line

bindkey "\e[5C" emacs-forward-word
bindkey "\e[5D" emacs-backward-word

bindkey "\e\e[C" emacs-forward-word
bindkey "\e\e[D" emacs-backward-word

bindkey "^[[A" history-search-backward
bindkey "^[[B" history-search-forward

bindkey '\eOA' up-line-or-beginning-search
bindkey '\eOB' down-line-or-beginning-search
bindkey '\eOC' forward-char
bindkey '\eOD' backward-char

bindkey "\eOc" emacs-forward-word
bindkey "\eOd" emacs-backward-word

bindkey "\eOF" end-of-line
bindkey "\eOH" beginning-of-line

bindkey '\e[A' up-line-or-beginning-search
bindkey '\e[B' down-line-or-beginning-search
bindkey '\e[C' forward-char
bindkey '\e[D' backward-char

bindkey "\e[F" end-of-line
bindkey "\e[H" beginning-of-line
bindkey "\e[Z" reverse-menu-complete

bindkey '^h' backward-delete-char
bindkey '^[h' backward-kill-word
bindkey '^i' expand-or-complete-prefix
bindkey '^p' up-line-or-beginning-search
bindkey '^n' down-line-or-beginning-search


# various completion options
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*' file-sort modification reverse
zstyle ':completion:*' ignore-parents parent pwd
zstyle ':completion:*' insert-tab false
zstyle ':completion:*' list-colors "=(#b) #([0-9]#)*=36=31"
zstyle ':completion:*' verbose yes
zstyle ':completion:*:approximate:*' max-errors 'reply=(  $((  ($#PREFIX+$#SUFFIX)/3  ))  )'
zstyle ':completion:*:approximate:*' max-errors 1 numeric
zstyle ':completion::approximate*:*' prefix-needed false
zstyle ':completion:*:cd:*' ignore-parents parent pwd
zstyle ':completion::complete:*' gain-privileges 1
zstyle ':completion:*:corrections' format '%B%d (errors %e)%b'
zstyle ':completion:*:default' list-prompt '%S%M matches%s'
zstyle ':completion:*:default' menu 'select=0'
zstyle ':completion:*:descriptions' format '-~- %U%d%u -~-'
zstyle ':completion:*:expand:*' tag-order all-expansions
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always
zstyle ':completion:*:manuals' separate-sections true
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:windows' menu on=0

# prompt
export PS1="$(print '%{\e[0;31m%}%1~%{\e[0m%} %{\e[1;32m%}%%%{\e[0m%}') "
export PS2="$(print '%{\e[1;33m%}-->%{\e[0m%}')"


## aliases
# systemctl
alias usys="systemctl --user"
alias journal="journalctl -elmx"

# dir
alias ls='ls --classify --color --group-directories-first --dereference-command-line-symlink-to-dir'
alias no='exa --colour-scale --binary --classify --color=always --git --group-directories-first'
#alias dir='no -Ahl'
alias dir='no -@aghlF'
alias ll='dir'
alias cwd="chdir"
alias mc='/usr/lib/mc/mc-wrapper.sh'

# files
alias mkdir='mkdir -p'
alias mv='mv -v'
alias cp='cp -v'
alias rm='rm -vI'

# rm(1) preserves root like a good boy. Why can't you?
alias chcon="chcon --preserve-root"
alias chgrp="chgrp --preserve-root"
alias chmod="chmod --preserve-root"
alias chown="chown --preserve-root"

# heh heh
alias apt='sl'

# colouring
alias dmesg='dmesg -H'
alias diff='diff --color'
alias tree='tree -CF --dirsfirst'
alias pactree='pactree -c'
alias grep='grep --color --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
alias fgrep='grep -F --color --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
alias egrep='grep -E --color --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
alias pping='prettyping --nolegend'
alias ncdu="ncdu --color dark -rr -x --exclude .git"

# editors
alias ekill='emacsclient -e "(kill-emacs)"'
alias se='sudo -e'
alias sedit='sudo emacs -Q -nw'
alias visudo='sudo SUDO_EDITOR="emacs -Q -nw" visudo'
alias vipw='sudo EDITOR="emacs -Q -nw" vipw'
alias vigr='sudo EDITOR="emacs -Q -nw" vigr'
alias ed='rlwrap -pGreen ed -lvp\>\ '
alias vim='vi'
# alias vi='e3vi'
# alias vim='e3vi'
# alias nano='e3pi'
# alias pico='e3pi'

# pacman
alias p='powerpill'
alias sp='sudo powerpill'
alias b='bauerbill'
alias sb='bb-wrapper --aur --build-dir /tmp/pacbuild'

# force proper homes
alias claws-mail="claws-mail --alternate-config-dir $XDG_DATA_HOME/claws"
alias csi_='csi -wq $XDG_CONFIG_HOME/chicken/csirc'
alias dc='rlwrap dc -f $XDG_CONFIG_HOME/dc/dcrc -'
alias mbsync="mbsync -c $XDG_CONFIG_HOME/isync/mbsyncrc"
alias startx="startx $XINITRC"
alias svn="svn --config-dir $XDG_CONFIG_HOME/subversion"
alias w3m="w3m -config $XDG_CONFIG_HOME/w3m/config"
alias wget="wget --hsts-file $XDG_CONFIG_HOME/wget/hsts --config $XDG_CONFIG_HOME/wget/wgetrc"

# other
alias 2hu='ffmpeg -f x11grab -r 40 -s 1920x1080 -i :0.0 -f pulse -i default\
      -acodec libvorbis -vcodec libx264 -tune touhou -preset ultrafast\
      $XDG_VIDEOS_DIR/screencast_$(date +%F_%H%M%S_%N).mkv'
alias gitlog='git log --decorate=full --color=always --oneline --graph --pickaxe-all --full-diff'
alias pastebin="curl -F 'c=@-' https://ptpb.pw"
alias ppush='rclone sync --checksum --verbose --progress --track-renames --copy-links \
      --exclude "emacs.d/backup/**" --exclude "emacs.d/auto-save-list/**" \
      ~/opt/pcloud peec:/home'
alias ppull='rclone sync --checksum --verbose --progress --track-renames \
      --exclude "emacs.d/backup/**" --exclude "emacs.d/auto-save-list/**" \
      peec:/home ~/opt/pcloud'
alias wm='dtach -A /tmp/dvtm -r winch dvtm -M'
alias wp='feh --no-fehbg --force-aliasing --no-xinerama --bg-tile'
alias s='mosh' # --predict=experimental'

# kittens!
alias c="kitty +kitten clipboard"
alias d="kitty +kitten diff"
alias i="kitty +kitten icat --align left"
alias l="kitty +kitten clipboard --get-clipboard"


## functions
# cheesy
function pprint
{
    echo -en "\033[0;32;40m"; (cat $@ | beep -c -f 400 -D 50 -l 10) ; echo -en "\033[0m"
}
# which (doesn't work on Debian)
function which
{
    (alias; declare -f) | \
	/usr/bin/which --tty-only --read-alias --read-functions --show-dot --show-tilde $@
}

# emacsclient but smarter
function e
{
    if [ -z ${DISPLAY+1} ]
    then # in a TTY
        XMODIFIERS=@im=none emacsclient -t "$@"
    else # on X
        XMODIFIERS=@im=none emacsclient -c "$@" &> /dev/null &!
    fi
}

# emacs server daemon  
function edae
{
    pushd ~ &> /dev/null
    XMODIFIERS=@im=none emacs --daemon
    popd &> /dev/null
}

# tail ll
function lt
{
    ls -Fltrsa --color "$@" | tail
}

# print raw man :^)
function manopt
{
    man $1 | sed 's/.\x08//g' | sed -n "/^\s\+-\+$2\b/,/^\s*$/p" | sed '$d;'
}

# wttr
function weather
{
    curl "https://wttr.in/$1"
}

# grab window
function scrsht
{
    activeWinLine=$(xprop -root | grep "_NET_ACTIVE_WINDOW(WINDOW)")
    activeWinId=${activeWinLine:40}
    import -window "$activeWinId" \
	   "$XDG_PICTURES_DIR/screen/$(date +%Y)/$(date +%F_%H%M%S_%N).png"
}

# dictionary lookup
function define
{
    dict $@ | colorit | bat
}

# useless clock
function clocc
{
    (while true
     do
         echo -ne "\e[s\e[0;$((COLUMNS-27))H$(date)\e[u"
         sleep 1
     done &)
}

# zsh_stats, partially stolen from oh_my_zsh
function zsh_stats
{    
    fc -l 1 | awk '{ CMD[$2]++; count++; }
	END { for (a in CMD) print CMD[a] " " CMD[a] / count * 100 "% " a; }'\
	    | grep -v "./" | column -c3 -s " " -t | sort -nr | nl | sed ${@:-10}q
}

function nnn
{
    command nnn "$@"
    if [ -f $NNN_TMPFILE ];
    then
	. $NNN_TMPFILE
	rm $NNN_TMPFILE
    fi
}

## internal functions go here
# window title
function chpwd
{
    [[ -t 1 ]] || return
    print -Pn "\e]2;%~\a"
}

# pip zsh completion
function _pip_completion
{
    local words cword
    read -Ac words
    read -cn cword
    reply=($(COMP_WORDS="$words[*]" \
		       COMP_CWORD=$((cword-1)) \
		       PIP_AUTO_COMPLETE=1 $words[1]))
}
compctl -K _pip_completion pip

# Plugins
if tty -s &> /dev/null
then
    source "$ppath/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh"
    source "$ppath/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh"
    source "$ppath/zsh-you-should-use/you-should-use.plugin.zsh"

    source "$XDG_CONFIG_HOME/exercism/exercism_completion.zsh"
    # source "$XDG_DATA_HOME/opam/opam-init/complete.zsh"
    # source "$XDG_DATA_HOME/opam/opam-init/switch_eval.sh"
fi
